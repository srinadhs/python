class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None
class Tree:
    def __init__(self):
        self.root = None
    def insert(self, data):
        z=Node(data)
        if self.root is None:
            self.root = z
        else:
            temp=self.root
            while True:
                if data < temp.data:
                    if temp.left is None:
                        temp.left = z
                        break
                    else:
                        temp = temp.left
                else:
                    if temp.right is None:
                        temp.right = z
                        break
                    else:
                        temp = temp.right
    def inorder(self, node):
        if node is not None:
            self.inorder(node.left)
            print(node.data, end=" ")
            self.inorder(node.right)
    def preorder(self, node):
        if node is not None:
            print(node.data, end=" ")
            self.preorder(node.left)
            self.preorder(node.right)
    def postorder(self, node):
        if node is not None:
            self.postorder(node.left)
            self.postorder(node.right)
            print(node.data, end=" ")
if __name__=="__main__":
    x=Tree()
    x.insert(10)
    x.insert(20)
    x.insert(7)
    x.insert(12)
    x.insert(30)
    x.insert(13)
    x.insert(9)
    x.insert(6)
    x.insert(11)
    x.insert(41)
    x.insert(25)
    x.insert(5)
    x.insert(8)

    x.inorder(x.root)
    x.postorder(x.root)
    x.preorder(x.root)
